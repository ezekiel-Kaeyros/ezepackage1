name: Pipelines Staging

on:
  push:
    branches:
      - main

jobs:
  checkout-repository:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

  create-env-file-api:
    runs-on: ubuntu-latest
    needs: checkout-repository
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Create env file for API backend
        run: |
          cd communities/packages/api && \
          touch .env && \
          echo "API_PORT=4000" > .env && \
          echo "API_URL=https://backcommunities.eze.ink" >> .env && \
          echo "NODE_ENV=production" >> .env && \
          echo "SECRET=WriteYourSecret" >> .env && \
          echo "FRONTEND_URL=https://communities.eze.ink" >> .env && \
          echo "MONGO_URL=mongodb+srv://eze:nMWN2NG50nSLJrOC@eze-communities.ufwbl4d.mongodb.net/?retryWrites=true&w=majority" >> .env && \
          echo "CLOUDINARY_CLOUD_NAME=dyekwrvwe" >> .env && \
          echo "CLOUDINARY_API_KEY=981519692274267" >> .env && \
          echo "CLOUDINARY_SECRET=EnwDIzzscMxY5SacVWoqUXE0mzw" >> .env && \
          echo "MAILGUN_API_KEY=YOUR_MAILGUN_API_KEY" >> .env && \
          echo "MAILGUN_DOMAIN=YOUR_MAILGUN_DOMAIN" >> .env
      - name: Archive .env file
        run: tar -czf env-api.tar.gz -C communities/packages/api .env
      - name: Upload .env file
        uses: actions/upload-artifact@v3
        with:
          name: env-api
          path: env-api.tar.gz

  create-env-file-landing-page:
    runs-on: ubuntu-latest
    needs: checkout-repository
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Create env file for landing page
        run: |
          cd landing-page && \
          touch .env && \
          echo 'NEXT_PUBLIC_COMMUNITIES_URL="https://communities.eze.ink/"' >> .env && \
          echo 'NEXT_PUBLIC_KASHAPP_AUTH_URL="https://kashapp.biz/auth/mo_saml/index.php"' >> .env && \
          echo 'NEXT_PUBLIC_LIVING_LIBRARY_URL="https://library.eze.ink"' >> .env && \
          echo 'NEXT_PUBLIC_SSO_LOGIN_URL="https://sso.eze.ink/auth/login"' >> .env
      - name: Archive .env file
        run: tar -czf env-landing.tar.gz -C landing-page .env
      - name: Upload .env file
        uses: actions/upload-artifact@v3
        with:
          name: env-landing
          path: env-landing.tar.gz

  create-env-file-communities-packages:
    runs-on: ubuntu-latest
    needs: checkout-repository
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Create env file for communities frontend
        run: |
          cd communities/packages/frontend && \
          touch .env && \
          echo "NODE_ENV=https://backcommunities.eze.ink" >> .env && \
          echo "GOOGLE_ANALYTICS_ID=G-MD706N8TZV" >> .env && \
          echo "NEXT_PUBLIC_ENV=production" >> .env && \
          echo "NEXT_PUBLIC_PRODUCTION_URL=https://backcommunities.eze.ink" >> .env && \
          echo "NEXT_PUBLIC_COMMUNITIES_URL=https://communities.eze.ink" >> .env && \
          echo "NEXT_PUBLIC_BACKENDCOMMUNITIES_URL=https://backcommunities.eze.ink" >> .env && \
          echo "NEXT_PUBLIC_LIVING_LIBRARY_URL=https://library.eze.ink/en" >> .env && \
          echo "NEXT_PUBLIC_SSO_LOGIN_URL=https://sso.eze.ink/auth/login" >> .env && \
          echo "NEXT_PUBLIC_SSO_LOGOUT_URL=https://sso.eze.ink/auth/logout" >> .env && \
          echo "NEXT_PUBLIC_KASHAPP_AUTH_URL=https://kashapp.biz/auth/mo_saml/index.php" >> .env && \
          echo "NEXT_PUBLIC_LANDINGPAGE_URL=https://eze.ink" >> .env
      - name: Archive .env file
        run: tar -czf env-frontend.tar.gz -C communities/packages/frontend .env
      - name: Upload .env file
        uses: actions/upload-artifact@v3
        with:
          name: env-frontend
          path: env-frontend.tar.gz

  create-env-file-sso:
    runs-on: ubuntu-latest
    needs: checkout-repository
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Create env file for SSO
        run: |
          cd sso/eze-auth0 && \
          touch .env && \
          echo "MONGODB_URI=mongodb+srv://eze:nMWN2NG50nSLJrOC@eze-communities.ufwbl4d.mongodb.net/?retryWrites=true&w=majority" > .env && \
          echo "PORT=3000" >> .env && \
          echo "SSO_URL=https://sso.eze.ink" >> .env && \
          echo "REDIRECT_ORIGIN=https://eze.ink" >> .env && \
          echo "CALLBACK_URL=https://sso.eze.ink/auth/login/callback" >> .env && \
          echo "LANDINGPAGE_URL=https://eze.ink" >> .env && \
          echo "COMMUNITIES_URL=https://communities.eze.ink" >> .env 
      - name: Archive .env file
        run: tar -czf env-sso.tar.gz -C sso/eze-auth0 .env
      - name: Upload .env file
        uses: actions/upload-artifact@v3
        with:
          name: env-sso
          path: env-sso.tar.gz

  build-and-push-frontend-image:
    runs-on: ubuntu-latest
    needs: [create-env-file-api, create-env-file-landing-page, create-env-file-communities-packages, create-env-file-sso]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Download env file
        uses: actions/download-artifact@v3
        with:
          name: env-frontend
          path: .
      - name: Extract env file
        run: tar -xzf env-frontend.tar.gz -C communities/packages/frontend
      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
      - name: Build frontend Docker image
        run: docker build -t ezekielkaeyros/frontend_eze_staging ./communities
      - name: Push frontend Docker image
        run: docker push ezekielkaeyros/frontend_eze_staging:latest

  build-and-push-backend-image:
    runs-on: ubuntu-latest
    needs: create-env-file-api
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Download env file
        uses: actions/download-artifact@v3
        with:
          name: env-api
          path: .
      - name: Extract env file
        run: tar -xzf env-api.tar.gz -C communities/packages/api
      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
      - name: Build backend Docker image
        run: docker build -t ezekielkaeyros/backend_communities_staging ./communities/packages/api
      - name: Push backend Docker image
        run: docker push ezekielkaeyros/backend_communities_staging:latest

  build-and-push-landing-image:
    runs-on: ubuntu-latest
    needs: create-env-file-landing-page
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Download env file
        uses: actions/download-artifact@v3
        with:
          name: env-landing
          path: .
      - name: Extract env file
        run: tar -xzf env-landing.tar.gz -C landing-page
      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
      - name: Build landing Docker image
        run: docker build -t ezekielkaeyros/eze_landing_staging ./landing-page
      - name: Push landing Docker image
        run: docker push ezekielkaeyros/eze_landing_staging:latest

  build-and-push-sso-image:
    runs-on: ubuntu-latest
    needs: create-env-file-sso
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Download env file
        uses: actions/download-artifact@v3
        with:
          name: env-sso
          path: .
      - name: Extract env file
        run: tar -xzf env-sso.tar.gz -C sso/eze-auth0
      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
      - name: Build SSO image
        run: docker build -t ezekielkaeyros/sso_staging ./sso/eze-auth0
      - name: Push SSO image
        run: docker push ezekielkaeyros/sso_staging:latest

  build-and-push-library-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Create env file
        run: |
          cd digital-library/frontend && \
          touch .env && \
          echo "NEXT_PUBLIC_ZOTERO_API_KEY=7MdTpwHW7W7zyNPvE9zDea2k" >> .env && \
          echo "NEXT_PUBLIC_ZOTERO_HOME_URL=https://eze.ink" >> .env && \
          echo "NEXT_PUBLIC_ZOTERO_API_KEY=ljJwZLSkS26ymt6DFd5D2Blc" >> .env && \
          echo "NEXT_PUBLIC_DIGITAL_LIBRARY_HOME=https://library.eze.ink" >> .env && \
          echo "NEXT_PUBLIC_ZOTERO_POST_FILES_URL=https://sso.eze.ink" >> .env && \
          echo "NEXT_PUBLIC_COMMUNITIES_HOME=https://communities.eze.ink" >> .env && \
          echo "NEXT_PUBLIC_ZOTERO_USER_ID=14487670" >> .env
          
      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
      - name: Build library image
        run: docker build -t ezekielkaeyros/ezelibrary ./digital-library/frontend
      - name: Push SSO image
        run: docker push ezekielkaeyros/ezelibrary:latest


 

      